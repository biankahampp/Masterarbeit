<?xml version="1.0" encoding="UTF-8" standalone="no"?><model><assignment language="ConDec" name="new model"><activitydefinitions><activity id="1" name="declined"><authorization/><datamodel/></activity><activity id="2" name="order"><authorization/><datamodel/></activity><activity id="3" name="accepted"><authorization/><datamodel/></activity><activity id="4" name="receive book"><authorization/><datamodel/></activity><activity id="5" name="receive bill"><authorization/><datamodel/></activity><activity id="6" name="pay"><authorization/><datamodel/></activity></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;accepted&lt;/b&gt; has to be preceded by &lt;b&gt;order&lt;/b&gt;. &lt;b&gt;accepted&lt;/b&gt; can happen only after &lt;b&gt;order&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ((( "B.started" \/ "B.completed") \/ "B.cancelled" )) W "A" ) </text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="order"/></branches></parameter><parameter templateparameter="2"><branches><branch name="accepted"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;declined&lt;/b&gt; has to be preceded by &lt;b&gt;order&lt;/b&gt;. &lt;b&gt;declined&lt;/b&gt; can happen only after &lt;b&gt;order&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ((( "B.started" \/ "B.completed") \/ "B.cancelled" )) W "A" ) </text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="order"/></branches></parameter><parameter templateparameter="2"><branches><branch name="declined"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition/><name>response</name><template><description>Whenever activity &lt;b&gt;order&lt;/b&gt; is executed, activity &lt;b&gt;accepted&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="2" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="1" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &amp;quot;A&amp;quot; was executed, 
but task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &amp;quot;A&amp;quot; has been executed, 
and task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;p&gt;Execute task &amp;quot;B&amp;quot; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &amp;quot;A&amp;quot; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &amp;quot;A&amp;quot; has been executed, and task &amp;quot;B&amp;quot; has been executed at least once after task &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="2"><branches><branch name="order"/></branches></parameter><parameter templateparameter="1"><branches><branch name="accepted"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition/><name>response</name><template><description>Whenever activity &lt;b&gt;order&lt;/b&gt; is executed, activity &lt;b&gt;declined&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="2" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="1" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &amp;quot;A&amp;quot; was executed, 
but task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &amp;quot;A&amp;quot; has been executed, 
and task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;p&gt;Execute task &amp;quot;B&amp;quot; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &amp;quot;A&amp;quot; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &amp;quot;A&amp;quot; has been executed, and task &amp;quot;B&amp;quot; has been executed at least once after task &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="2"><branches><branch name="order"/></branches></parameter><parameter templateparameter="1"><branches><branch name="declined"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition/><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;accepted&lt;/b&gt; or &lt;b&gt;declined&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>!( ( &lt;&gt;( "A.completed" ) /\ &lt;&gt;(  "B.completed" ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because both tasks &amp;quot;A&amp;quot; and &amp;quot;B&amp;quot; were executed.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:&lt;ul&gt;
	&lt;li&gt;none of the tasks &amp;quot;A&amp;quot; and &amp;quot;B&amp;quot; were executed, or&lt;/li&gt;
	&lt;li&gt;task &amp;quot;A&amp;quot; was executed and task &amp;quot;B&amp;quot; not, or&lt;/li&gt;
	&lt;li&gt;task &amp;quot;B&amp;quot; was executed and task &amp;quot;A&amp;quot; not.&lt;/li&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="accepted"/></branches></parameter><parameter templateparameter="2"><branches><branch name="declined"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;receive book&lt;/b&gt; has to be preceded by &lt;b&gt;accepted&lt;/b&gt;. &lt;b&gt;receive book&lt;/b&gt; can happen only after &lt;b&gt;accepted&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ((( "B.started" \/ "B.completed") \/ "B.cancelled" )) W "A" ) </text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="accepted"/></branches></parameter><parameter templateparameter="2"><branches><branch name="receive book"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="receive book"/></branches></parameter><parameter templateparameter="2"><branches><branch name="receive bill"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;pay&lt;/b&gt; has to be preceded by &lt;b&gt;receive bill&lt;/b&gt;. &lt;b&gt;pay&lt;/b&gt; can happen only after &lt;b&gt;receive bill&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ((( "B.started" \/ "B.completed") \/ "B.cancelled" )) W "A" ) </text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="receive bill"/></branches></parameter><parameter templateparameter="2"><branches><branch name="pay"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><data/><team/><graphical><activities><cell height="50.0" id="1" width="90.0" x="289.0" y="331.0"/><cell height="50.0" id="2" width="90.0" x="94.0" y="177.0"/><cell height="50.0" id="3" width="90.0" x="266.0" y="23.0"/><cell height="50.0" id="4" width="90.0" x="472.0" y="25.0"/><cell height="50.0" id="5" width="90.0" x="490.0" y="328.0"/><cell height="50.0" id="6" width="90.0" x="674.0" y="328.0"/></activities><constraints><cell height="1.0" id="1" width="1.0" x="138.0" y="48.0"/><cell height="1.0" id="2" width="1.0" x="139.0" y="356.0"/><cell height="1.0" id="3" width="1.0" x="256.0" y="207.0"/><cell height="1.0" id="4" width="1.0" x="256.0" y="207.0"/><cell height="1.0" id="5" width="1.0" x="322.0" y="202.0"/><cell height="1.0" id="6" width="1.0" x="412.0" y="49.0"/><cell height="1.0" id="7" width="1.0" x="526.0" y="201.0"/><cell height="1.0" id="8" width="1.0" x="625.0" y="351.0"/></constraints></graphical></assignment></model>